{
  "contractName": "CarController",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_command",
          "type": "string"
        }
      ],
      "name": "CarCommandSent",
      "type": "event",
      "signature": "0x787974f576d067af0a10f4ded8c490181c968b0778f075dfa5ab9e2501a4836f"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_command",
          "type": "string"
        }
      ],
      "name": "sendCommand",
      "outputs": [
        {
          "name": "commandSent",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x8aed8040"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_command\",\"type\":\"string\"}],\"name\":\"sendCommand\",\"outputs\":[{\"name\":\"commandSent\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_command\",\"type\":\"string\"}],\"name\":\"CarCommandSent\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Pines & Electronics\",\"details\":\"Simple contract emitting an event.\",\"methods\":{\"sendCommand(string)\":{\"details\":\"send the event with the car command.\",\"params\":{\"_command\":\"refers to the attribute value, limited to 2048 bytes.\"},\"return\":\"true when the command was emitted properly.\"}},\"title\":\"Car Controller\"},\"userdoc\":{\"methods\":{\"sendCommand(string)\":{\"notice\":\"Send command\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/supdann/Documents/Hackathons/20190412_ODYSSEY/pines_dao3/contracts/CarController.sol\":\"CarController\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/supdann/Documents/Hackathons/20190412_ODYSSEY/pines_dao3/contracts/CarController.sol\":{\"keccak256\":\"0x1d170c47a090481a89befabb8777d9d92cb3c5f794791da99c937186cba056b6\",\"urls\":[\"bzzr://1e2c20aa442a8fe6495479e4c647da8fdeb8cf3e57188128e006540a335b6c31\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101f9806100206000396000f3fe608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638aed804014610046575b600080fd5b34801561005257600080fd5b5061010c6004803603602081101561006957600080fd5b810190808035906020019064010000000081111561008657600080fd5b82018360208201111561009857600080fd5b803590602001918460018302840111640100000000831117156100ba57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610126565b604051808215151515815260200191505060405180910390f35b60007f787974f576d067af0a10f4ded8c490181c968b0778f075dfa5ab9e2501a4836f826040518080602001828103825283818151815260200191508051906020019080838360005b8381101561018a57808201518184015260208101905061016f565b50505050905090810190601f1680156101b75780820380516001836020036101000a031916815260200191505b509250505060405180910390a16001905091905056fea165627a7a7230582059ab22ba40ea47e17bd7425bb58a235c0ae65d6508dccf8875e101a37e8566460029",
  "deployedBytecode": "0x608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638aed804014610046575b600080fd5b34801561005257600080fd5b5061010c6004803603602081101561006957600080fd5b810190808035906020019064010000000081111561008657600080fd5b82018360208201111561009857600080fd5b803590602001918460018302840111640100000000831117156100ba57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610126565b604051808215151515815260200191505060405180910390f35b60007f787974f576d067af0a10f4ded8c490181c968b0778f075dfa5ab9e2501a4836f826040518080602001828103825283818151815260200191508051906020019080838360005b8381101561018a57808201518184015260208101905061016f565b50505050905090810190601f1680156101b75780820380516001836020036101000a031916815260200191505b509250505060405180910390a16001905091905056fea165627a7a7230582059ab22ba40ea47e17bd7425bb58a235c0ae65d6508dccf8875e101a37e8566460029",
  "sourceMap": "144:651:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;144:651:0;;;;;;;",
  "deployedSourceMap": "144:651:0:-;;;;;;;;;;;;;;;;;;;;;;;;587:205;;8:9:-1;5:2;;;30:1;27;20:12;5:2;587:205:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;587:205:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;587:205:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;587:205:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;587:205:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;587:205:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;679:16;717:46;745:8;717:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;717:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;781:4;774:11;;587:205;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\n/**\n * @title Car Controller\n * @author Pines & Electronics\n *\n * @dev Simple contract emitting an event.\n */\ncontract CarController {\n    \n    /**\n     * @dev CarCommandSent event register in the log the commands that you send to the car.\n     */\n    event CarCommandSent(\n        string _command\n    );\n\n    /**\n     * @notice Send command\n     *\n     * @dev send the event with the car command.\n     *\n     * @param _command refers to the attribute value, limited to 2048 bytes.\n     * @return true when the command was emitted properly.\n     */\n    function sendCommand (\n        string memory _command\n    )\n        public\n        returns (bool commandSent)\n    {\n\n        emit CarCommandSent(\n            _command\n        );\n\n        return true;\n    }\n\n}\n",
  "sourcePath": "/Users/supdann/Documents/Hackathons/20190412_ODYSSEY/pines_dao3/contracts/CarController.sol",
  "ast": {
    "absolutePath": "/Users/supdann/Documents/Hackathons/20190412_ODYSSEY/pines_dao3/contracts/CarController.sol",
    "exportedSymbols": {
      "CarController": [
        20
      ]
    },
    "id": 21,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Car Controller\n@author Pines & Electronics\n * @dev Simple contract emitting an event.",
        "fullyImplemented": true,
        "id": 20,
        "linearizedBaseContracts": [
          20
        ],
        "name": "CarController",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev CarCommandSent event register in the log the commands that you send to the car.",
            "id": 5,
            "name": "CarCommandSent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "indexed": false,
                  "name": "_command",
                  "nodeType": "VariableDeclaration",
                  "scope": 5,
                  "src": "316:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "306:31:0"
            },
            "src": "286:52:0"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "701:91:0",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13,
                        "name": "_command",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "745:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 12,
                      "name": "CarCommandSent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "717:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "717:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15,
                  "nodeType": "EmitStatement",
                  "src": "712:51:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "781:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 11,
                  "id": 17,
                  "nodeType": "Return",
                  "src": "774:11:0"
                }
              ]
            },
            "documentation": "@notice Send command\n     * @dev send the event with the car command.\n     * @param _command refers to the attribute value, limited to 2048 bytes.\n@return true when the command was emitted properly.",
            "id": 19,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendCommand",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "name": "_command",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "618:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "618:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "608:38:0"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "name": "commandSent",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "679:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "678:18:0"
            },
            "scope": 20,
            "src": "587:205:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 21,
        "src": "144:651:0"
      }
    ],
    "src": "0:796:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/supdann/Documents/Hackathons/20190412_ODYSSEY/pines_dao3/contracts/CarController.sol",
    "exportedSymbols": {
      "CarController": [
        20
      ]
    },
    "id": 21,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Car Controller\n@author Pines & Electronics\n * @dev Simple contract emitting an event.",
        "fullyImplemented": true,
        "id": 20,
        "linearizedBaseContracts": [
          20
        ],
        "name": "CarController",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev CarCommandSent event register in the log the commands that you send to the car.",
            "id": 5,
            "name": "CarCommandSent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "indexed": false,
                  "name": "_command",
                  "nodeType": "VariableDeclaration",
                  "scope": 5,
                  "src": "316:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "306:31:0"
            },
            "src": "286:52:0"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "701:91:0",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13,
                        "name": "_command",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "745:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 12,
                      "name": "CarCommandSent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "717:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "717:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15,
                  "nodeType": "EmitStatement",
                  "src": "712:51:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "781:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 11,
                  "id": 17,
                  "nodeType": "Return",
                  "src": "774:11:0"
                }
              ]
            },
            "documentation": "@notice Send command\n     * @dev send the event with the car command.\n     * @param _command refers to the attribute value, limited to 2048 bytes.\n@return true when the command was emitted properly.",
            "id": 19,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendCommand",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "name": "_command",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "618:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "618:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "608:38:0"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "name": "commandSent",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "679:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "678:18:0"
            },
            "scope": 20,
            "src": "587:205:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 21,
        "src": "144:651:0"
      }
    ],
    "src": "0:796:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xeB3842AA96b3eC4c4dF4BF84D2b8491E7cB7BCD1",
      "transactionHash": "0x4c72556997ca519481030a4972318cd883f63ee59524813916a143b226ec78b9"
    }
  },
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-04-13T19:20:03.422Z",
  "devdoc": {
    "author": "Pines & Electronics",
    "details": "Simple contract emitting an event.",
    "methods": {
      "sendCommand(string)": {
        "details": "send the event with the car command.",
        "params": {
          "_command": "refers to the attribute value, limited to 2048 bytes."
        },
        "return": "true when the command was emitted properly."
      }
    },
    "title": "Car Controller"
  },
  "userdoc": {
    "methods": {
      "sendCommand(string)": {
        "notice": "Send command"
      }
    }
  }
}